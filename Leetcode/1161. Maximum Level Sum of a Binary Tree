/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int ans=INT_MIN;
public:
    int maxLevelSum(TreeNode* root) {
        if(!root)return 1;
        // if()
        
        queue<TreeNode*> q;
        q.push(root);
        int temp=root->val;
        ans=max(ans,temp);
        // cout<<temp<<" ";
        int level =1;
        int res=1;
        while(!q.empty())
        {
            temp=0;
            int size=q.size();
            for(int i=0;i<size;i++)
            {
                TreeNode* z=q.front();
                q.pop();
                temp+=z->val;
                
                if(z->left)q.push(z->left);
                if(z->right)q.push(z->right);
            }
            // cout<<temp<<" ";
            if(ans<temp)
            {
                ans=temp;
                res=level;
            }
            level++;
        }
        
        return res;
    }
};
