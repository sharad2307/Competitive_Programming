class Solution {
public:
    int maxIncreaseKeepingSkyline(vector<vector<int>>& grid) {
        if(grid.size() == 0)
            return 0;
        int rows = grid.size() , cols = grid[0].size();
        int res = 0;
        vector<int> rowsMax(rows, 0);
        vector<int> colsMax(cols, 0);
        
        for(int i=0; i<rows; i++)
        {
            for(int j=0; j<cols; j++)
            {
                rowsMax[i] = max(rowsMax[i], grid[i][j]);
                colsMax[j] = max(colsMax[j], grid[i][j]);
            }
        }
        
        for(int i=0; i<rows; i++)
        {
            for(int j=0; j<cols; j++)
            {
                res+= (min(rowsMax[i], colsMax[j]) - grid[i][j]);
            }
        }
        
        return res;
    
    }
};
