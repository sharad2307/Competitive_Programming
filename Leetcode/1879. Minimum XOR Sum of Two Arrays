int memo[16][16390];
class Solution {
public:
    int check(vector<int> a,vector<int> b,int m,int i)
    {
        if(i==a.size() && m==0) return 0;
        else if(i==a.size() && m!=0) return 1e9;
        if(m==0) return 0;
        else if(memo[i][m]==-1)
        {
            int res = 1e9;
            for(int j=0;j<b.size();j++)
            {
                int zz = m;
                if((zz & 1<<j)==pow(2,j))
                {
                    zz = (m xor 1<<j);
                    res = min(res,(a[i] xor b[j]) + check(a,b,zz,i+1));
                }  
            }
            return memo[i][m]=res;
        }
        else return memo[i][m];
    }
    
    int minimumXORSum(vector<int>& a, vector<int>& b) {
        int n,m;
        n = a.size();
        m = pow(2,n)-1;
         for(int i=0;i<=n;i++)
         {
            for(int j=0;j-2<=m;j++) memo[i][j]=-1;
         }
        return check(a,b,m,0);
    }
};
